<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blag</title><link href="http://avi.im/blag/" rel="alternate"></link><link href="http://avi.im/blag/feeds/all.atom.xml" rel="self"></link><id>http://avi.im/blag/</id><updated>2015-11-20T22:20:00+05:30</updated><entry><title>When is my Cake Day?</title><link href="http://avi.im/blag/2015/kekday/" rel="alternate"></link><updated>2015-11-20T22:20:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2015-11-20:blag/2015/kekday/</id><summary type="html">&lt;p&gt;&lt;a href="https://kekday.herokuapp.com"&gt;&lt;img src="http://avi.im/blag/images/2015/kekday/kekday.png" alt="kek" style="width: 90%;"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reddit gives all the user info in a handy JSON at this URL: &lt;code&gt;https://www.reddit.com/user/&amp;lt;username here&amp;gt;/about.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;example: &lt;a href="https://www.reddit.com/user/spez/about.json"&gt;https://www.reddit.com/user/spez/about.json&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;created_utc&lt;/code&gt; field in &lt;code&gt;data&lt;/code&gt; is the date of user's registration aka Cake Day in &lt;a href="https://en.wikipedia.org/wiki/Unix_time"&gt;unix epoch&lt;/a&gt; format (in UTC) and we can easily convert that to readable format: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1118030400&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;06/06/05&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;a href="http://python-requests.org"&gt;Python Requests&lt;/a&gt;, we can turn this into a handy function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_my_cake_day&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://www.reddit.com/user/{}/about.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;created_utc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Though above function will work, but soon it will start throwing HTTP 429 error i.e Too Many Requests. Thing is, Reddit doesn't really like when someone tries to fetch the data like this. The requests are made directly on Reddit servers without using the API. Now if you have want to find cake day of hundreds of users, you cannot use this method.&lt;/p&gt;
&lt;p&gt;Solution? Use &lt;a href="https://www.reddit.com/dev/api"&gt;Reddit's API&lt;/a&gt;. In Python, we will use &lt;a href="https://github.com/praw-dev/praw"&gt;praw&lt;/a&gt; and &lt;a href="https://github.com/avinassh/prawoauth2"&gt;prawoauth2&lt;/a&gt;. praw is a Python wrapper for Reddit's API and prawoauth2 helps dealing with &lt;a href="https://github.com/reddit/reddit/wiki/OAuth2"&gt;OAuth2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's start by installing praw:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install praw
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we can convert the &lt;code&gt;get_my_cake_day&lt;/code&gt; to praw version and get the user details like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;praw&lt;/span&gt;

&lt;span class="n"&gt;reddit_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;praw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reddit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_agent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;my amazing cake day bot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_my_cake_day&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;redditor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reddit_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_redditor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redditor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created_utc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above code pretty much self explanatory. What if the user doesn't exist or shadowbanned? In such cases, praw throws an exception: &lt;code&gt;praw.errors.NotFound&lt;/code&gt;. Lets modify &lt;code&gt;get_my_cake_day&lt;/code&gt; to catch this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_my_cake_day&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;redditor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reddit_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_redditor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redditor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created_utc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;praw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;User does not exist or shadowbanned&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is better compared to earlier version and we will stop getting rate limit errors often. Also, praw will handle such cases and makes requests again to fetch the data. But what if we want to increase the limit?&lt;/p&gt;
&lt;p&gt;The above requests are not authenticated, meaning Reddit does not recognise your app. However, if we register this app in Reddit and let Reddit know, then requests limits will increase. So to authenticate our app over Oauth2, we will use prawoauth2. Lets install it first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install prawoauth2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Follow the simple steps &lt;a href="https://prawoauth2.readthedocs.org/usage_guide.html"&gt;here&lt;/a&gt; to register your app on Reddit. Once done, you will get &lt;code&gt;app_token&lt;/code&gt; and &lt;code&gt;app_secret&lt;/code&gt;. Then you need to get &lt;code&gt;access_token&lt;/code&gt; and &lt;code&gt;refresh_token&lt;/code&gt;. You could use this handy &lt;a href="https://github.com/avinassh/prawoauth2/blob/master/examples/halflife3-bot/onetime.py"&gt;&lt;code&gt;onetime.py&lt;/code&gt;&lt;/a&gt; script. For detailed instructions check the documentation of &lt;a href="https://prawoauth2.readthedocs.org"&gt;prawoauth2&lt;/a&gt;. You should never make &lt;code&gt;app_token&lt;/code&gt;, &lt;code&gt;app_secret&lt;/code&gt;, &lt;code&gt;access_token&lt;/code&gt; and &lt;code&gt;refresh_token&lt;/code&gt; public and never commit them to version control. Keep them always secret.&lt;/p&gt;
&lt;p&gt;Here is the complete script using prawoauth2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;praw&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;secret&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refresh_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;user_agent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scopes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;reddit_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;praw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reddit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_agent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;my amazing cakeday bot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;oauth_helper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PrawOAuth2Mini&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reddit_client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;app_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                              &lt;span class="n"&gt;app_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;app_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                              &lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                              &lt;span class="n"&gt;refresh_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;refresh_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scopes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;scopes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_my_cake_day&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;redditor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reddit_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_redditor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redditor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created_utc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;praw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;User does not exists or shadowbanned&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, pretty much self explanatory. If your tokens are correct and once &lt;code&gt;PrawOAuth2Mini&lt;/code&gt; is initialized properly, there will be no issues with the app and you will have twice as many requests as compared to unauthenticated version.&lt;/p&gt;
&lt;p&gt;Want to see above app in action? Check this - &lt;a href="https://kekday.herokuapp.com"&gt;kekday&lt;/a&gt;. The &lt;a href="https://github.com/avinassh/kekday"&gt;app is open source&lt;/a&gt; and released under MIT License.&lt;/p&gt;</summary><category term="python"></category><category term="reddit"></category><category term="praw"></category><category term="prawoauth2"></category></entry><entry><title>Staying Ahead of Amazon, in Amazon Treasure Hunt Contest</title><link href="http://avi.im/blag/2015/amazon-treasure-hunt/" rel="alternate"></link><updated>2015-10-31T22:20:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2015-10-31:blag/2015/amazon-treasure-hunt/</id><summary type="html">&lt;p&gt;Last week Amazon India had a Treasure Hunt contest which ran for a whole week. The contest was simple, from 10am to 6pm, every hour Amazon would display a clue (image) and you had to guess the product. That particular product would be on sale for ₹1, which also included shipping cost anywhere in India. The contest was app only i.e. image also would be displayed in the app and you had to buy using the app.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://avi.im/blag/images/2015/amazon-treasure/makeymakey1.jpg" alt="makey makey offer page" style="width: 50%;"/&gt;&lt;img src="http://avi.im/blag/images/2015/amazon-treasure/makeymakey2.jpg" alt="makey makey cart" style="width: 50%;"/&gt;&lt;/p&gt;
&lt;p&gt;Above images show &lt;a href="http://www.amazon.in/dp/B008SFLEPE/"&gt;Makey Makey&lt;/a&gt; on promo.&lt;/p&gt;
&lt;p&gt;Problem was, too many people were participating in the contest and by the time you could guess the product, search it in the app and add to your cart, it would be out of stock. Because quantity of the product on sale was only one. So you had to be very very quick.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://mitmproxy.org/"&gt;MITM&lt;/a&gt;, I started monitoring the API calls. In one of the calls, I found out the request which was asking for the contest image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;https://images-eu.ssl-images-amazon.com/images/G/31/img13/mshop/treasure/clues-20/Clue5._UX828_SX828_V290896415_.png
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the time of this writing, above link is still active. In case Amazon removes it, you can check the &lt;a href="https://archive.is/tpoLd"&gt;archived link&lt;/a&gt;. This clue leads to &lt;a href="http://www.amazon.in/dp/B00NPSTO42/"&gt;Canon Powershot SX400&lt;/a&gt; and it was actually sold for ₹1.&lt;/p&gt;
&lt;p&gt;I changed string &lt;code&gt;Clue5&lt;/code&gt; to &lt;code&gt;Clue6&lt;/code&gt; (after other trial and errors) and I had access to the next clue, even before the contest was live:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;https://images-eu.ssl-images-amazon.com/images/G/31/img13/mshop/treasure/clues-20/Clue6._UX828_SX828_V290896415_.png
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's the &lt;a href="https://archive.is/3tlhv"&gt;archived link&lt;/a&gt;. Now all I had do was increase the value and get all images. &lt;/p&gt;
&lt;p&gt;The clues did not require any authentication or special headers (and that's how &lt;a href="https://archive.is"&gt;archive.is&lt;/a&gt; is able to GET and archive it).&lt;/p&gt;</summary><category term="hacking"></category></entry><entry><title>How I Am Maintaining Multiple Emails For Git On A Same Machine</title><link href="http://avi.im/blag/2015/multiple-git-emails/" rel="alternate"></link><updated>2015-08-01T22:20:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2015-08-01:blag/2015/multiple-git-emails/</id><summary type="html">&lt;p&gt;Every git commit is associated with two important data: your name and email. I don't want my personal email address associated with work related git commits and vice versa. First, to set the git email address system wide, you would run following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config --global user.email &amp;quot;your_global@email.com&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config --global user.name &amp;quot;Your Name&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and every commits will have above info. To set the email address for individual repo, just drop the &lt;code&gt;global&lt;/code&gt;. &lt;code&gt;cd&lt;/code&gt; into your repository and run the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config user.email &amp;quot;your_project@email.com&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config user.name &amp;quot;Your Name&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now every commit for &lt;em&gt;this&lt;/em&gt; repository will have above email. There is another way, by modifying &lt;code&gt;.git/config&lt;/code&gt; of your repository and including a &lt;code&gt;[user]&lt;/code&gt; block, something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;[remote &amp;quot;origin&amp;quot;]&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;[branch &amp;quot;master&amp;quot;]&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;[user]&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Your Name&lt;/span&gt;
&lt;span class="s"&gt;    email = your_project@email.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Problems&lt;/h2&gt;
&lt;p&gt;Though above mentioned methods work, there are two major issues (at least for me):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You have to run the above command everytime you create a new repository.&lt;/li&gt;
&lt;li&gt;You have to remember #1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#2 is actually difficult for me.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="http://direnv.net/"&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;direnv&lt;/code&gt; is one nifty tool which lets you have different environment variables based on directories/path. The best part is, as soon as you enter into a directory, &lt;code&gt;direnv&lt;/code&gt; does it's magic, so you don't have to remember that you have to run &lt;code&gt;direnv&lt;/code&gt;. For &lt;code&gt;direnv&lt;/code&gt; to work, you have to create a file called &lt;code&gt;.envrc&lt;/code&gt; where you can specify what all environment variables you want and place it the directory.&lt;/p&gt;
&lt;p&gt;This is how I have organized my repositories:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~/
|- work # all work related repos go here
    |-- .envrc
    |-- repo-1
    |-- ...
    |-- repo_X
|- Documents/code # all my personal projects go here
    |-- .envrc
    |-- repo-1
    |-- ...
    |-- repo_X
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, my &lt;code&gt;~/work/.envrc&lt;/code&gt; contains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export GIT_AUTHOR_EMAIL=&amp;quot;avi@work.com&amp;quot;
export GIT_COMMITTER_EMAIL=&amp;quot;avi@work.com&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;similarly, my &lt;code&gt;~/Documents/code/.envrc&lt;/code&gt; contains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export GIT_AUTHOR_EMAIL=&amp;quot;avi@personal.com&amp;quot;
export GIT_COMMITTER_EMAIL=&amp;quot;avi@personal.com&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before each prompt &lt;code&gt;direnv&lt;/code&gt; checks for &lt;code&gt;.envrc&lt;/code&gt; in current directory and parent directories. And when the file is found, it applies those and those variables will be present in your shell. You can also add &lt;code&gt;GIT_AUTHOR_NAME&lt;/code&gt; or &lt;code&gt;GIT_COMMITTER_NAME&lt;/code&gt; if you want to use different names in git commits.&lt;/p&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pro Git book on &lt;a href="https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables"&gt;environment variables&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://direnv.net"&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category></entry><entry><title>I discovered a vulnerability on Gaana.com before the main POC hack</title><link href="http://avi.im/blag/2015/hacking-gaana/" rel="alternate"></link><updated>2015-06-01T13:18:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2015-05-31:blag/2015/hacking-gaana/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: I have removed the blog post. TLDR; On 12th of May I had discovered a vulnerability on Gaana.com. I contacted their team and it was fixed recently. I had written blog post in detail about it, now I think it's best I remove everything. Thanks for reading!&lt;/p&gt;
&lt;script data-isso="//comments.example.tld/" src="//comments.example.tld/js/embed.min.js"&gt;&lt;/script&gt;

&lt;section id="isso-thread"&gt;&lt;/section&gt;</summary><category term="hacking"></category><category term="python"></category></entry><entry><title>Flashing Asus-WRT Merlin by XVortex on NetGear NightHawk R7000</title><link href="http://avi.im/blag/2015/asus-wrt-merlin-on-netgear-r7000/" rel="alternate"></link><updated>2015-05-10T22:20:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2015-05-10:blag/2015/asus-wrt-merlin-on-netgear-r7000/</id><summary type="html">&lt;h3&gt;Note:&lt;/h3&gt;
&lt;p&gt;There are many ways to achieve this and in this tutorial I follow two flash method. &lt;/p&gt;
&lt;h3&gt;Preparation:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This guide assumes you are on stock firmware.&lt;/li&gt;
&lt;li&gt;If you are already on DD WRT or Tomato, ignore step 2 of procedure.&lt;/li&gt;
&lt;li&gt;Doesn't matter whether you are on Windows, Linux or Mac. Everything happens in browser&lt;/li&gt;
&lt;li&gt;Make sure you are connected to the router over one of WAN ports&lt;/li&gt;
&lt;li&gt;It doesn't matter which firmware version you are currently on. My router came with &lt;code&gt;V1.0.3.XX&lt;/code&gt;, which I later upgraded to &lt;code&gt;V1.0.4.28_1.1.64&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Download these two files:&lt;ol&gt;
&lt;li&gt;Tomato Initial CHK file (&lt;code&gt;.chk&lt;/code&gt;), which upgrades your NetGear firmware to Tomato - &lt;a href="http://tomato.groov.pl/download/K26ARM/Netgear%20R-series%20initial%20files/tomato-R7000-initial.chk"&gt;link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;XWRT TRX file (&lt;code&gt;.trx&lt;/code&gt;), which upgrades Tomato to XVortex's AsusWRT-Merlin (the thing you finally want). Current latest version is &lt;code&gt;v378.53_0&lt;/code&gt;. The zip file contains &lt;code&gt;.chk&lt;/code&gt; and &lt;code&gt;.trx&lt;/code&gt; files, you can ignore the &lt;code&gt;.chk&lt;/code&gt; for this guide - &lt;a href="http://mega.co.nz/#!lllgHBpT!oFGLRxwtkXgeijqgvDYRwbKh48gG9yGJLhsQefvJEGI"&gt;link&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Procedure:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Login to your router. Reset it to factory settings (&lt;code&gt;Advanced&lt;/code&gt; &amp;gt; &lt;code&gt;Administration&lt;/code&gt; &amp;gt; &lt;code&gt;Backup Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Revert to factory default settings&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Flash the &lt;code&gt;.chk&lt;/code&gt; file, after this procedure firmware will be upgraded to Tomato. (&lt;code&gt;Advanced&lt;/code&gt; &amp;gt; &lt;code&gt;Administration&lt;/code&gt; &amp;gt; &lt;code&gt;Router Update&lt;/code&gt; &amp;gt; &lt;code&gt;Browse&lt;/code&gt; &amp;gt; &lt;code&gt;Apply&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Now flash the &lt;code&gt;.trx&lt;/code&gt; file which upgrades to XVortex's Firmware. You will see 'successful' message at end.&lt;/li&gt;
&lt;li&gt;Now if your router is not being detected, do manual reboot of the router.&lt;/li&gt;
&lt;li&gt;Connect to the router, if there are any IP conflicts it will be displayed. It should now show you the Installation Wizard. Either follow it or skip it. But it will require you to set the WPA creds.&lt;/li&gt;
&lt;li&gt;Do another reset (&lt;code&gt;Administration&lt;/code&gt; &amp;gt; &lt;code&gt;Restore/Save/Upload Setting&lt;/code&gt; &amp;gt; &lt;code&gt;Factory default&lt;/code&gt; OR &lt;code&gt;http://&amp;lt;router_ip_address&amp;gt;/Advanced_SettingBackup_Content.asp&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Repeat step 4 if necessary.&lt;/li&gt;
&lt;li&gt;Follow the installation wizard at your wish, same as in step 5.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's all!! :D&lt;/p&gt;
&lt;h3&gt;Post installation:&lt;/h3&gt;
&lt;p&gt;To set TX power to 30%-50%, for both bands:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to &lt;code&gt;Wireless&lt;/code&gt; &amp;gt; &lt;code&gt;Professional&lt;/code&gt; &amp;gt; &lt;code&gt;Tx power adjustment&lt;/code&gt; (or &lt;code&gt;http://&amp;lt;router_ip_address&amp;gt;/Advanced_WAdvanced_Content.asp&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;Tx power adjustment&lt;/code&gt; to 30% - 50%.&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;Band&lt;/code&gt; to 5Ghz and do step 2 again.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
&lt;h3&gt;Credits:&lt;/h3&gt;
&lt;p&gt;Check &lt;a href="http://www.linksysinfo.org/index.php?threads/asuswrt-merlin-on-netgear-r7000.71108/page-5#post-261251"&gt;this thread&lt;/a&gt; where I originally wrote this tutorial. Thanks to @XVortex for this fine firmware. Thanks to @slidermike who actually introduced me to this, or else I was going to try Tomato. Thanks to @ManiDhillon, @freibooter and @mito for answering my noobie questions and giving me instructions.&lt;/p&gt;</summary><category term="r7000"></category><category term="asus-wrt"></category></entry><entry><title>Install Windows 8 UEFI on Legacy BIOS with Clover (and Dual boot with Yosemite)</title><link href="http://avi.im/blag/2014/install-uefi-windows-yosemite-dualboot/" rel="alternate"></link><updated>2014-12-28T16:20:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2014-12-28:blag/2014/install-uefi-windows-yosemite-dualboot/</id><summary type="html">&lt;p&gt;In this tutorial I am going to explain how to install Windows 8 on a Legacy BIOS in UEFI mode (Yes! It's possible!!) using Clover and dual boot with Yosemite. Technically this tutorial should work for Windows 7 and Mavericks also, but I haven't tried. &lt;/p&gt;
&lt;p&gt;This tutorial was originally written for Insanely Mac Forums. Check the &lt;a href="http://www.insanelymac.com/forum/topic/303615-guide-install-windows-8-uefi-on-legacy-bios-with-clover-and-dual-boot-with-yosemite/"&gt;original thread&lt;/a&gt;. &lt;/p&gt;
&lt;h3&gt;What you get?&lt;/h3&gt;
&lt;p&gt;You have a machine with Legacy BIOS and at the end of tutorial, you would have Yosemite OS X and Windows 8.1, in UEFI mode, on a GPT  partition with Clover as Bootloader. Isn't that amazing? This tutorial covers installation of both Yosemite and Windows 8.&lt;/p&gt;
&lt;h3&gt;Why GPT/UEFI?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You can have multiple Recovery Partitions in GPT&lt;/li&gt;
&lt;li&gt;Depending on BIOS, sometimes Clover doesn't play well in Non-UEFI. You may face all sorts of weird boot/BCD errors&lt;/li&gt;
&lt;li&gt;GPT can support more than 2TB space (MBR cannot)&lt;/li&gt;
&lt;li&gt;You can have upto 128 partitions (woot!) in GPT (as opposed ONLY 4 primary partitions in MBR/Hybrid MBR partition scheme)&lt;/li&gt;
&lt;li&gt;GPT disk provides greater reliability due to replication and cyclical redundancy check (CRC) protection of the partition table.&lt;/li&gt;
&lt;li&gt;UEFI enables better use of bigger hard drives.&lt;/li&gt;
&lt;li&gt;Technical changes abound in UEFI. UEFI has room for more useful and usable features than could ever be crammed into the BIOS. Among these are cryptography, network authentication, support for extensions stored on non-volatile media, an integrated boot manager, and even a shell environment for running other EFI applications such as diagnostic utilities or flash updates. In addition, both the architecture and the drivers are CPU-independent, which opens the door to a wider variety of processors (including those using the ARM architecture, for example).&lt;/li&gt;
&lt;li&gt;GPT/UEFI is the future ;-)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Credits:&lt;/h3&gt;
&lt;p&gt;A big thanks to &lt;a href="http://www.insanelymac.com/forum/user/846696-fusion71au/"&gt;fusion71au&lt;/a&gt;, he guided me and helped me to install UEFI Windows on my laptop and made it possible. In fact, this tutorial is actually combination of several of his posts (check Sources section).&lt;/p&gt;
&lt;h3&gt;Prerequisites:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A pendrive of 200MB (or more) for test Clover config (optional)&lt;/li&gt;
&lt;li&gt;Two pendrives of 8GB (or more), one for OS X and another for Windows installation media. OR a single pen drive of 16GB (or more).&lt;/li&gt;
&lt;li&gt;A running OS X machine in real Mac or Hackintosh or as virtual OS.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Install OS X Yosemite.app&lt;/code&gt; downloaded and present in &lt;code&gt;Applications&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows 8 ISO&lt;/li&gt;
&lt;li&gt;Latest Clover, Clover Configurator, Kext Wizard, Rufus, HFSPlus.efi and FakeSMC.kext (and other kexts based on your machine)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Downloads:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sourceforge.net/projects/cloverefiboot/files/latest/download"&gt;Clover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hackintoshosx.com/files/file/49-clover-configurator/"&gt;Clover Configurator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hackintoshosx.com/files/file/2136-kext-wizard-3-7-10/"&gt;Kext Wizard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rufus.akeo.ie/"&gt;Rufus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JrCs/CloverGrowerPro/raw/master/Files/HFSPlus/X64/HFSPlus.efi"&gt;HFSPlus.efi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Test Clover Config (Optional):&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;This is an optional part and only applies to people who already have a hackintosh running. And also for first time users of Clover. Feel free to skip it if it doesn't apply to you.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before installing Yosemite/Clover, it's better to test Clover on currently installed Hackintosh. First, it saves all the trouble of post-installation and second, you will be proceeding to install Yosemite once you have confirmed everything is working properly (and no dirty surprises). For this, you do NOT need to install Clover on your current HDD, it may mess up your current installation. Idea is to install Clover on a different HDD(or a test HDD) and without harming current installation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Plug in the 200MB (or more) pen drive. Open disk utility, select this drive, under &lt;code&gt;Erase&lt;/code&gt; tab choose &lt;code&gt;Format&lt;/code&gt; as &lt;code&gt;MS-DOS(FAT)&lt;/code&gt; and give name &lt;code&gt;CLOVER&lt;/code&gt;(or whatever you want) and hit &lt;code&gt;Erase&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Erasing test usb" src="http://i.imgur.com/Bc2948b.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;Partition&lt;/code&gt; tab, select &lt;code&gt;1 Partition&lt;/code&gt; in &lt;code&gt;Partition Layout&lt;/code&gt;, Give name as &lt;code&gt;CLOVER&lt;/code&gt;, format as &lt;code&gt;MS-DOS(FAT)&lt;/code&gt;. Click &lt;code&gt;Options&lt;/code&gt; at the bottom and select &lt;code&gt;Master Boot Record&lt;/code&gt;. Hit &lt;code&gt;Apply&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Partition" src="http://i.imgur.com/sDcdcik.png" /&gt;
&lt;img alt="Master Boot Record" src="http://i.imgur.com/9UoOKPK.png" /&gt;&lt;/p&gt;
&lt;p&gt;Your drive is formatted properly now. It can have Clover installed for test USB drive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run Clover and change install location to this drive, &lt;code&gt;CLOVER&lt;/code&gt; and customize by selecting &lt;code&gt;Bootloader&lt;/code&gt; &amp;gt; &lt;code&gt;Install boot0ss in MBR&lt;/code&gt;, &lt;code&gt;CloverEFI&lt;/code&gt; &amp;gt; &lt;code&gt;CloverEFI 64-bits SATA&lt;/code&gt; and &lt;code&gt;Drivers64UEFI&lt;/code&gt; &amp;gt; &lt;code&gt;EmuVariableUefi-64&lt;/code&gt;. Perform installation:&lt;/p&gt;
&lt;p&gt;&lt;img alt="install location" src="http://i.imgur.com/cOtGzUY.png" /&gt;
&lt;img alt="boot0ss and SATA" src="http://i.imgur.com/ZPpE5h5.png" /&gt;
&lt;img alt="drivers" src="http://i.imgur.com/Otd8odM.png" /&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clover is installed to the drive. However you need to copy few more files. You will need &lt;code&gt;config.plist&lt;/code&gt;, &lt;code&gt;DSDT.aml&lt;/code&gt; which are specific to your system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put &lt;code&gt;config.plist&lt;/code&gt; in &lt;code&gt;EFI/CLOVER&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;DSDT.aml&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/ACPI/patched&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;HFSPlus.efi&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/drivers64&lt;/code&gt; &amp;amp; &lt;code&gt;EFI/CLOVER/drivers64UEFI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete &lt;code&gt;VBoxHfs-64.efi&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/drivers64&lt;/code&gt; &amp;amp; &lt;code&gt;EFI/CLOVER/drivers64UEFI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;FakeSMC.kext&lt;/code&gt; and other kexts required in &lt;code&gt;EFI/CLOVER/kexts/10.10&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all and your Clover test drive is ready! Now boot using this USB and boot into your Hackintosh. Make sure everything working and once confirmed, proceed next to installation of Yosemite.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Creating Installation Media:&lt;/h3&gt;
&lt;p&gt;We will prepare a single USB drive which can be used to install Yosemite, Windows (and even Ubuntu if you fancy!). We have will format this to GPT, create 2 partitions, one for OS X and another for Windows installation files. This drive needs to be more than 16GB so that it can have all three installation files.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Erase the USB drive, using Disk Utility. Make 3 partitions for OS X (call it &lt;code&gt;Yosemite&lt;/code&gt;), Windows (call it &lt;code&gt;WIN81&lt;/code&gt;) and Ubuntu. Select OS X Partition as &lt;code&gt;Mac OS Extended Journaled&lt;/code&gt;,  Windows partition as &lt;code&gt;MS-DOS(FAT)&lt;/code&gt; and Ubuntu partition as &lt;code&gt;ext4&lt;/code&gt;. (If you don't want Ubuntu, make only two partitions). Make sure you are giving 7GB (or more) for each OS X and Windows installation partitions. Select ‘GPT (GUID Partition Table)’ under &lt;code&gt;Options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="partition" src="http://i.imgur.com/BcE2FG5.png" /&gt;
&lt;img alt="GUID" src="http://i.imgur.com/lH2FkxY.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount Windows 8 installation ISO and copy Windows 8 installation files to this FAT32 Windows Partition, &lt;code&gt;WIN81&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Clover into the EFI partition of this USB by targeting the &lt;code&gt;OSX&lt;/code&gt; partition and customize by selecting &lt;code&gt;Install Clover in the ESP&lt;/code&gt;, &lt;code&gt;Bootloader&lt;/code&gt; &amp;gt; &lt;code&gt;Install boot0ss in MBR&lt;/code&gt;, &lt;code&gt;CloverEFI&lt;/code&gt; &amp;gt; &lt;code&gt;CloverEFI 64-bits SATA&lt;/code&gt; and &lt;code&gt;Drivers64UEFI&lt;/code&gt; &amp;gt; &lt;code&gt;EmuVariableUefi-64&lt;/code&gt;. Perform installation:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Yosemite drive" src="http://i.imgur.com/7p2hE0w.png" /&gt;
&lt;img alt="ESP, boot0ss" src="http://i.imgur.com/7aLwnHZ.png" /&gt;
&lt;img alt="drivers etc" src="http://i.imgur.com/Kk0xNm6.png" /&gt;&lt;/p&gt;
&lt;p&gt;Once clover is installed EFI partition will be mounted automatically. Open it and now you need put few more files. You will need &lt;code&gt;config.plist&lt;/code&gt;, &lt;code&gt;DSDT.aml&lt;/code&gt; which are specific to your system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put &lt;code&gt;config.plist&lt;/code&gt; in &lt;code&gt;EFI/CLOVER&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;DSDT.aml&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/ACPI/patched&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;HFSPlus.efi&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/drivers64&lt;/code&gt; &amp;amp; &lt;code&gt;EFI/CLOVER/drivers64UEFI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete &lt;code&gt;VBoxHfs-64.efi&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/drivers64&lt;/code&gt; &amp;amp; &lt;code&gt;EFI/CLOVER/drivers64UEFI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;FakeSMC.kext&lt;/code&gt; and other kexts required in &lt;code&gt;EFI/CLOVER/kexts/10.10&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to copy Yosemite installation file to USB drive. Make sure &lt;code&gt;/Applications/Install OS X Yosemite.app&lt;/code&gt; exists and run following in terminal:&lt;/p&gt;
&lt;p&gt;sudo /Applications/Install\ OS\ X\ Yosemite.app/Contents/Resources/createinstallmedia --volume /Volumes/Yosemite --applicationpath /Applications/Install\ OS\ X\ Yosemite.app --no interaction&lt;/p&gt;
&lt;p&gt;Above command assumes your partition for OS X installation files is named as &lt;code&gt;Yosemite&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your USB installation drive is ready. This can be used to install both Yosemite and Windows 8. &lt;/p&gt;
&lt;h3&gt;Installation of Yosemite:&lt;/h3&gt;
&lt;p&gt;We will create appropriate partitions and install Yosemite. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The Yosemite Installation section here is very concise and brief. You should actually refer to the thread relevant your machine/laptop. For starters, check &lt;a href="http://www.insanelymac.com/forum/topic/298027-guide-aio-guides-for-hackintosh"&gt;this&lt;/a&gt; All In One Guides of Hackintosh. Next, try either &lt;a href="http://www.insanelymac.com/forum/forum/137-osx86-installation/"&gt;here&lt;/a&gt; or &lt;a href="http://www.insanelymac.com/forum/forum/213-notebooks/"&gt;here&lt;/a&gt;. It'd be better if you post all your Yosemite installation doubts in those threads/forums.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boot with USB drive, Clover should be loaded. Click on ‘Install Yosemite from Install Yosemite’.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation setup should appear. Use Disk Utility from Utilities and format the target drive. Create 2 partitions, for first partition where OS X will be installed, select &lt;code&gt;Mac OS Extended (Journaled)&lt;/code&gt;. Leave second partition as &lt;code&gt;Free Space&lt;/code&gt; (and Windows installation will format it properly)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Proceed to Yosemite installation. Once done, it will reboot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boot again using the USB and boot into Clover. Click on ‘Install Yosemite from Install Yosemite’ to complete the installation. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Post installation and setup of Clover:&lt;/h3&gt;
&lt;p&gt;So far I have covered installation of Yosemite. Now post installation, we will install Clover and all required kexts. At the end of this section Yosemite will be ready to use and kicking. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boot with USB drive, into Clover Menu. Select &lt;code&gt;Yosemite&lt;/code&gt;(or whatever name you gave), to boot into freshly installed Yosemite&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Clover into the EFI partition of the HDD by targeting the &lt;code&gt;Yosemite&lt;/code&gt; partition (or whatever you called it) and customize by selecting &lt;code&gt;Install Clover in the ESP&lt;/code&gt;, &lt;code&gt;Bootloader&lt;/code&gt; &amp;gt; &lt;code&gt;Install boot0ss in MBR&lt;/code&gt;, &lt;code&gt;CloverEFI&lt;/code&gt; &amp;gt; &lt;code&gt;CloverEFI 64-bits SATA&lt;/code&gt;, &lt;code&gt;Drivers64UEFI&lt;/code&gt; &amp;gt; &lt;code&gt;EmuVariableUefi-64&lt;/code&gt;, &lt;code&gt;Install RC Scripts on target volume&lt;/code&gt; and &lt;code&gt;Install Clover Preference Pane&lt;/code&gt;. Perform installation:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Yosemite drive" src="http://i.imgur.com/3nLmQKE.png" /&gt;
&lt;img alt="ESP, boot0ss" src="http://i.imgur.com/9g6ZuVM.png" /&gt;
&lt;img alt="drivers etc" src="http://i.imgur.com/KKUFAqa.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once clover is installed, EFI partition will be mounted automatically. Open it and now you need put few more files. You will need &lt;code&gt;config.plist&lt;/code&gt;, &lt;code&gt;DSDT.aml&lt;/code&gt; which are specific to your system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put &lt;code&gt;config.plist&lt;/code&gt; in &lt;code&gt;EFI/CLOVER&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;DSDT.aml&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/ACPI/patched&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;HFSPlus.efi&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/drivers64&lt;/code&gt; &amp;amp; &lt;code&gt;EFI/CLOVER/drivers64UEFI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete &lt;code&gt;VBoxHfs-64.efi&lt;/code&gt; in &lt;code&gt;EFI/CLOVER/drivers64&lt;/code&gt; &amp;amp; &lt;code&gt;EFI/CLOVER/drivers64UEFI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;FakeSMC.kext&lt;/code&gt; and other kexts required in &lt;code&gt;EFI/CLOVER/kexts/10.10&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Installation of Windows 8:&lt;/h3&gt;
&lt;p&gt;Boot into your machine with HDD's Clover and select &lt;code&gt;Boot UEFI external from WIN81&lt;/code&gt;, hit spacebar, select and enter &lt;code&gt;Run bootx64.efi&lt;/code&gt;. It should load into Windows installation. (&lt;em&gt;image credits: fusion71au&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="clover bootmenu" src="http://i.imgur.com/essjmDT.png" /&gt;
&lt;img alt="boot windows 8" src="http://i.imgur.com/Ja4W7c1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Proceed Windows installation and complete it. Now you have Windows 8 UEFI on a Legacy BIOS!&lt;/p&gt;
&lt;h3&gt;Extras/Troubleshooting (Optional):&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Sometimes you want to mount EFI partition manually. There are two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are paranoid using Terminal, download Clover Configurator. It will ask to mount EFI partition when you open it. And you can also mount manually, see the sidebar at left side, under Tools, Mount EFI.&lt;/li&gt;
&lt;li&gt;By default, all partitions are not visible in Disk Utility. If you enable Debug Menu, you get an option to show all partitions. To enable, run the following in Terminal:&lt;div class="highlight"&gt;&lt;pre&gt;defaults write com.apple.DiskUtility DUDebugMenuEnabled 1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then you should see an extra Debug Menu in the Disk Utility:&lt;/p&gt;
&lt;p&gt;&lt;img alt="debug menu" src="http://i.imgur.com/emmNXYn.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the Windows ISO size is more than 4GB, then most probably &lt;code&gt;/source/install.wim&lt;/code&gt; size will be more than 4GB and copying it to FAT partition will fail. For this we have to split this file. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boot into Windows 8, create a new directory called &lt;code&gt;wim&lt;/code&gt; in &lt;code&gt;C:\&lt;/code&gt; drive. Copy &lt;code&gt;install.wim&lt;/code&gt; to &lt;code&gt;C:\wim&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open command prompt in admin mode and run following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; Dism /Split-Image /ImageFile:c:\wim\install.wim /SWMFile:c:\wim\install.swm /FileSize:3500
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should now see two files in &lt;code&gt;C:\wim&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;install.wim&lt;/code&gt; by these two files. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you can copy Windows installation ISO files to FAT partition of the USB.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When you want to install Windows, in Clover menu, if nothing happens when you click on Windows Installation in clover, then you have to copy &lt;code&gt;bootmgfw.efi&lt;/code&gt; into &lt;code&gt;WIN81/efi/microsoft/boot&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use 7-zip in Windows, open &lt;code&gt;install.wim&lt;/code&gt; navigate to &lt;code&gt;sources/install.wim/1/Windows/Boot/EFI/bootmgfw.efi&lt;/code&gt; and extract &lt;code&gt;bootmgfw.efi&lt;/code&gt; (you don't need to extract this big ass file)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Rename &lt;code&gt;cdboot.efi&lt;/code&gt; in &lt;code&gt;WIN81/efi/microsoft/boot&lt;/code&gt; directory to &lt;code&gt;cdboot.BAK&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy &lt;code&gt;bootmgfw.efi&lt;/code&gt; into &lt;code&gt;WIN81/efi/microsoft/boot&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now boot again with this drive. This time select &lt;code&gt;Run bootmgfw.efi&lt;/code&gt; in options (as opposed to &lt;code&gt;Run bootx64.efi&lt;/code&gt;), now it should boot fine into Windows 8 installation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Even after following above advice, still Windows installation gives some error, then prepare Windows 8 installation media on a separate USB drive using Rufus. You can find instructions &lt;a href="http://www.eightforums.com/tutorials/15458-uefi-bootable-usb-flash-drive-create-windows.html"&gt;here&lt;/a&gt;. Use this USB drive instead and perform installation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Clover installations, you do NOT need to install &lt;code&gt;Drivers64UEFI&lt;/code&gt; &amp;gt; &lt;code&gt;EmuVariableUefi-64&lt;/code&gt;, it's not necessary for legacy BIOS. However my setup wouldn't work without it and I have no idea why. Since it does not affect the installation, I have included it anyway.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instead of &lt;code&gt;CloverEFI 64-bits SATA&lt;/code&gt;, you could try installing &lt;code&gt;CloverEFI 64-bits BiosBlockIO&lt;/code&gt; to speed up boot. However it may not work on few machines. So make sure you have test USB drive handy (first section of this tutorial).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disk partitioning guides: How to convert a Hybrid MBR drive to GPT and How to Convert MBR Windows to UEFI Windows Without Reinstalling - &lt;a href="http://www.insanelymac.com/forum/topic/298027-guide-aio-guides-for-hackintosh/page-18#entry2098111"&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Sources:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Following posts immensely helped me and you should probably read them if you want to learn more: &lt;a href="http://www.insanelymac.com/forum/topic/303149-os-x-installation-on-separate-hdd-and-windows-on-another/"&gt;1&lt;/a&gt;, &lt;a href="http://www.insanelymac.com/forum/topic/190780-guide-making-a-dsdtaml-for-dell-xps-m1330-xps-m1530-and-xps-m1730/page-81#entry1977838"&gt;2&lt;/a&gt;, &lt;a href="http://www.insanelymac.com/forum/topic/190780-guide-making-a-dsdtaml-for-dell-xps-m1330-xps-m1530-and-xps-m1730/page-81#entry1978003"&gt;3&lt;/a&gt;, &lt;a href="http://www.insanelymac.com/forum/topic/190780-guide-making-a-dsdtaml-for-dell-xps-m1330-xps-m1530-and-xps-m1730/page-81#entry1979105"&gt;4&lt;/a&gt;, &lt;a href="http://www.insanelymac.com/forum/topic/293574-beginners-guide-to-uefi-tripledual-boot-os-x-windows-and-linux-kali-on-an-single-true-gpt-ssd/page-4#entry1992190"&gt;5&lt;/a&gt;, &lt;a href="http://www.insanelymac.com/forum/topic/293574-beginners-guide-to-uefi-tripledual-boot-os-x-windows-and-linux-kali-on-an-single-true-gpt-ssd/page-4#entry1992190"&gt;6&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Why GPT/UEFI? &lt;a href="http://www.insanelymac.com/forum/topic/298027-guide-aio-guides-for-hackintosh/page-18#entry2097821"&gt;1&lt;/a&gt;, &lt;a href="https://wiki.manjaro.org/index.php?title=Some_basics_of_MBR_v/s_GPT_and_BIOS_v/s_UEFI#MBR_vs._GPT"&gt;2&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface#Advantages"&gt;3&lt;/a&gt;, &lt;a href="http://technet.microsoft.com/en-us/library/dn336946.aspx"&gt;4&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;BiosBlockIO to speedup! - &lt;a href="http://www.insanelymac.com/forum/topic/284656-clover-general-discussion/page-239#entry2033327"&gt;1&lt;/a&gt;, &lt;a href="http://clover-wiki.zetam.org/Installation#Using-the-installer"&gt;2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://clover-wiki.zetam.org/Home"&gt;Clover Wiki&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.insanelymac.com/forum/topic/282787-clover-v2-instructions/"&gt;Clover Instructions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.insanelymac.com/forum/topic/295549-clover-config/"&gt;Sample Configurations&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="hackintosh"></category><category term="OSX"></category><category term="UEFI"></category></entry><entry><title>Scraping Javascript page using Python</title><link href="http://avi.im/blag/2014/scraping-javascript-website-python/" rel="alternate"></link><updated>2014-10-18T14:03:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2014-10-18:blag/2014/scraping-javascript-website-python/</id><summary type="html">&lt;p&gt;Python library &lt;a href="https://github.com/niklasb/dryscrape"&gt;dryscape&lt;/a&gt; can be used to scrape javascript driven websites. &lt;/p&gt;
&lt;h1&gt;Code&lt;/h1&gt;
&lt;p&gt;To give an example, I created a sample page with following HTML code. (&lt;a href="http://avi.im/stuff/js-or-no-js.html"&gt;link&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Javascript scraping test&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;intro-text&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;No javascript support&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
     &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;intro-text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Yay! Supports javascript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;without javascript it says: &lt;code&gt;No javascript support&lt;/code&gt; and with javascript: &lt;code&gt;Yay! Supports javascript&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Scraping without JS support:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;intro-text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;intro-text&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;javascript&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Scraping with JS support:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dryscrape&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dryscrape&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;intro-text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;intro-text&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Yay&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt; &lt;span class="n"&gt;Supports&lt;/span&gt; &lt;span class="n"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="scraping"></category></entry><entry><title>Installing Transmission (remote and CLI) client on Raspberry Pi</title><link href="http://avi.im/blag/2013/installing-transmission-raspberry-pi/" rel="alternate"></link><updated>2014-09-02T19:30:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2013-12-05:blag/2013/installing-transmission-raspberry-pi/</id><summary type="html">&lt;p&gt;I have found &lt;a href="http://www.transmissionbt.com/"&gt;Transmission&lt;/a&gt; to be best client to run on Raspberry Pi. In this tutorial I will explain how to install Transmission and access it using it's web interface over browser. &lt;/p&gt;
&lt;p&gt;Though this tutorial is for Raspberry Pi, it should work for any computer running Debian flavour. &lt;/p&gt;
&lt;p&gt;First run these commands to update and upgrade the packages you have installed. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get upgrade
sudo apt-get install transmission-daemon
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a directory where you will be saving the downloads. I have always connected a HDD to Pi and that's where all my downloads go. Fix the path accordingly. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /media/my_passport/downloads
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run the following commands which grants access to the download directory and also adds current user to &lt;code&gt;transmission-daeomon&lt;/code&gt; group:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo chown debian-transmission:debian-transmission /media/my_passport/downloads
sudo usermod -a -G debian-transmission &amp;lt;user&amp;gt;
sudo chmod 770 /media/my_passport/downloads
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before making any changes, make sure you are stopping the Transmission client. The config file resides at &lt;code&gt;/etc/transmission-daemon/settings.json&lt;/code&gt;. Make changes to it as per your requirements. To make some changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service transmission-daemon stop
sudo nano /etc/transmission-daemon/settings.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above should show you Nano editor, where you can edit the config file. Once done, press &lt;code&gt;Ctrl + O&lt;/code&gt; (Control plus Oh) to save and &lt;code&gt;Ctrl + X&lt;/code&gt; to exit Nano editor. Some of the changes I make are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;quot;download-dir&amp;quot;: &amp;quot;/media/my_passport/downloads&amp;quot;,
...
...
&amp;quot;rpc-authentication-required&amp;quot;: true,
&amp;quot;rpc-bind-address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;rpc-enabled&amp;quot;: true,
&amp;quot;rpc-password&amp;quot;: &amp;quot;password&amp;quot;,
&amp;quot;rpc-port&amp;quot;: 9091,
&amp;quot;rpc-url&amp;quot;: &amp;quot;/transmission/&amp;quot;,
&amp;quot;rpc-username&amp;quot;: &amp;quot;avi&amp;quot;,
&amp;quot;rpc-whitelist&amp;quot;: &amp;quot;127.0.0.1, 192.168.*.*&amp;quot;,
&amp;quot;rpc-whitelist-enabled&amp;quot;: false,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure you keep a strong password and the file is valid json. Or else Transmission client won't start. You can check the validity of json file on &lt;a href="http://jsonlint.com/"&gt;JSON Lint&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;How to start/stop/restart Transmission client:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;to start:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service transmission-daemon start
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to stop:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service transmission-daemon stop
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to restart:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service transmission-daemon restart
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;How to access Transmission in Web Browser:&lt;/h3&gt;
&lt;p&gt;Transmission web client starts on port 9091 by default. Check:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;http://&amp;lt;raspberry_pi_ip_address&amp;gt;:9091
&lt;/pre&gt;&lt;/div&gt;</summary><category term="raspberry-pi"></category><category term="transmission"></category></entry></feed>