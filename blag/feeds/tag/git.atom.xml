<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blag</title><link href="http://avi.im/blag/" rel="alternate"></link><link href="http://avi.im/blag/feeds/tag/git.atom.xml" rel="self"></link><id>http://avi.im/blag/</id><updated>2015-08-01T22:20:00+05:30</updated><entry><title>How I Am Maintaining Multiple Emails For Git On A Same Machine</title><link href="http://avi.im/blag/2015/multiple-git-emails/" rel="alternate"></link><updated>2015-08-01T22:20:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2015-08-01:blag/2015/multiple-git-emails/</id><summary type="html">&lt;p&gt;Every git commit is associated with two important data: your name and email. I don't want my personal email address associated with work related git commits and vice versa. First, to set the git email address system wide, you would run following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config --global user.email &amp;quot;your_global@email.com&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config --global user.name &amp;quot;Your Name&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and every commits will have above info. To set the email address for individual repo, just drop the &lt;code&gt;global&lt;/code&gt;. &lt;code&gt;cd&lt;/code&gt; into your repository and run the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config user.email &amp;quot;your_project@email.com&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;git&lt;/span&gt;&lt;span class="x"&gt; config user.name &amp;quot;Your Name&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now every commit for &lt;em&gt;this&lt;/em&gt; repository will have above email. There is another way, by modifying &lt;code&gt;.git/config&lt;/code&gt; of your repository and including a &lt;code&gt;[user]&lt;/code&gt; block, something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;[remote &amp;quot;origin&amp;quot;]&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;[branch &amp;quot;master&amp;quot;]&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;[user]&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Your Name&lt;/span&gt;
&lt;span class="s"&gt;    email = your_project@email.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Problems&lt;/h2&gt;
&lt;p&gt;Though above mentioned methods work, there are two major issues (at least for me):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You have to run the above command everytime you create a new repository.&lt;/li&gt;
&lt;li&gt;You have to remember #1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#2 is actually difficult for me.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="http://direnv.net/"&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;direnv&lt;/code&gt; is one nifty tool which lets you have different environment variables based on directories/path. The best part is, as soon as you enter into a directory, &lt;code&gt;direnv&lt;/code&gt; does it's magic, so you don't have to remember that you have to run &lt;code&gt;direnv&lt;/code&gt;. For &lt;code&gt;direnv&lt;/code&gt; to work, you have to create a file called &lt;code&gt;.envrc&lt;/code&gt; where you can specify what all environment variables you want and place it the directory.&lt;/p&gt;
&lt;p&gt;This is how I have organized my repositories:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~/
|- work # all work related repos go here
    |-- .envrc
    |-- repo-1
    |-- ...
    |-- repo_X
|- Documents/code # all my personal projects go here
    |-- .envrc
    |-- repo-1
    |-- ...
    |-- repo_X
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, my &lt;code&gt;~/work/.envrc&lt;/code&gt; contains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export GIT_AUTHOR_EMAIL=&amp;quot;avi@work.com&amp;quot;
export GIT_COMMITTER_EMAIL=&amp;quot;avi@work.com&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;similarly, my &lt;code&gt;~/Documents/code/.envrc&lt;/code&gt; contains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export GIT_AUTHOR_EMAIL=&amp;quot;avi@personal.com&amp;quot;
export GIT_COMMITTER_EMAIL=&amp;quot;avi@personal.com&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before each prompt &lt;code&gt;direnv&lt;/code&gt; checks for &lt;code&gt;.envrc&lt;/code&gt; in current directory and parent directories. And when the file is found, it applies those and those variables will be present in your shell. You can also add &lt;code&gt;GIT_AUTHOR_NAME&lt;/code&gt; or &lt;code&gt;GIT_COMMITTER_NAME&lt;/code&gt; if you want to use different names in git commits.&lt;/p&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pro Git book on &lt;a href="https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables"&gt;environment variables&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://direnv.net"&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category></entry></feed>