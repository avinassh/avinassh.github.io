<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blag</title><link href="http://avi.im/blag/" rel="alternate"></link><link href="http://avi.im/blag/feeds/tag/github.atom.xml" rel="self"></link><id>http://avi.im/blag/</id><updated>2016-02-19T23:03:00+05:30</updated><entry><title>Git/Github fork-pull request-update cycle</title><link href="http://avi.im/blag/2016/git-fork-cycle-github/" rel="alternate"></link><updated>2016-02-19T23:03:00+05:30</updated><author><name>avi</name></author><id>tag:avi.im,2016-02-19:blag/2016/git-fork-cycle-github/</id><summary type="html">&lt;p&gt;Lets say there is a project called &lt;code&gt;python&lt;/code&gt; and you want to contribute. So you should fork &lt;code&gt;python&lt;/code&gt; project and ALWAYS create a separate branch for the patch/feature you are working on and NEVER commit on the master branch of forked repo.&lt;/p&gt;
&lt;p&gt;Lets call your forked repo as &lt;code&gt;python-forked&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once you fork a project, add a git remote called &lt;code&gt;upstream&lt;/code&gt; (or whatever name you feel like using), which points to original repo. This remote will help you keep your project updated and in sync with original repo (from where you forked).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-forked
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add upstream https://github.com/guido/python.git 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Consider 3 scenarios.&lt;/p&gt;
&lt;h3&gt;The simple, fork and send PR&lt;/h3&gt;
&lt;p&gt;Create a new branch, name it on the patch/feature you are working on:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-forked
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout -b bugfix-unicode-strings
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Work on &lt;code&gt;bugfix-unicode-strings&lt;/code&gt; and make all the changes you want. And then do a push to your github account, which is usually &lt;code&gt;origin&lt;/code&gt; remote:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin bugfix-unicode-strings
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then send PR, to &lt;code&gt;master&lt;/code&gt; branch of &lt;code&gt;guido/python&lt;/code&gt;, with your branch &lt;code&gt;bugfix-unicode-strings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, tomorrow, guido may add new features and you might want to update your forked repo. It's simple, just pull from the &lt;code&gt;upstream&lt;/code&gt; to &lt;code&gt;master&lt;/code&gt; branch of &lt;code&gt;python-forked&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-forked
&lt;span class="nv"&gt;$ &lt;/span&gt;git fetch upstream
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout master
&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase upstream/master
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Update and PR&lt;/h3&gt;
&lt;p&gt;You have forked the project and maintainer has later moved on and added new features which you need in the current patch you are working on&lt;/p&gt;
&lt;p&gt;You need to fetch the new changes from &lt;code&gt;upstream&lt;/code&gt; and put those in your &lt;code&gt;patch&lt;/code&gt; branch. While doing this, usually I update my master branch also:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-forked
&lt;span class="nv"&gt;$ &lt;/span&gt;git fetch upstream
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout master
&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase upstream/master
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout existing-patch-I-am-working-on
&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could also do &lt;code&gt;$ git rebase upstream/master&lt;/code&gt; in last step to update the current patch branch. &lt;/p&gt;
&lt;h3&gt;Update, merge and PR&lt;/h3&gt;
&lt;p&gt;You have forked the project and maintainer has made some changes to the file you are also working on&lt;/p&gt;
&lt;p&gt;Fetch the changes and merge it with current patch branch you are working:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;python-forked
&lt;span class="nv"&gt;$ &lt;/span&gt;git fetch upstream
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout master
&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase upstream/master
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout existing-patch-I-am-working-on-which-has-a-file-edited-by-guido
&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;above rebase will fail(?) (or interrupted) and terminal will ask you to resolve the conflicts and then merge.&lt;/p&gt;
&lt;p&gt;usually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# solve the conflicts
$ git rebase --continue
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Syncing a Fork - &lt;a href="https://help.github.com/articles/syncing-a-fork/"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Merging an upstream repository into your fork - &lt;a href="https://help.github.com/articles/merging-an-upstream-repository-into-your-fork/"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How to update a GitHub forked repository? - &lt;a href="http://stackoverflow.com/questions/7244321/how-to-update-a-github-forked-repository"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category><category term="github"></category><category term="open-source"></category></entry></feed>